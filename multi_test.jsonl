{"org": "google", "repo": "gson", "number": 1992, "state": "closed", "title": "Test PR 1992", "body": "Test body", "base": {"label": "google:master", "ref": "master", "sha": "615c8835d309e1be512dd98809b48332ce70250d"}, "resolved_issues": [], "fix_patch": "diff --git a/test.txt b/test.txt\nindex 1234567..abcdefg 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1 +1 @@\n-old\n+new\n", "test_patch": "diff --git a/test.txt b/test.txt\nindex 1234567..abcdefg 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1 +1 @@\n-old\n+new\n", "instance_id": "google__gson-1992"}
{"org": "google", "repo": "gson", "number": 1993, "state": "closed", "title": "Test PR 1993", "body": "Test body", "base": {"label": "google:master", "ref": "master", "sha": "615c8835d309e1be512dd98809b48332ce70250d"}, "resolved_issues": [], "fix_patch": "diff --git a/test.txt b/test.txt\nindex 1234567..abcdefg 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1 +1 @@\n-old\n+new\n", "test_patch": "diff --git a/test.txt b/test.txt\nindex 1234567..abcdefg 100644\n--- a/test.txt\n+++ b/test.txt\n@@ -1 +1 @@\n-old\n+new\n", "instance_id": "google__gson-1993"}
{"org": "google", "repo": "gson", "number": 2043, "state": "closed", "title": "Change target Java version to 7", "body": "Resolves #2018\r\n\r\nAlso tries to add some documentation to the README regarding Java version and JPMS module requirements. I am not sure if the formatting and wording is ideal; feedback is appreciated.\r\n\r\nFollow-up task:\r\n~~Remove the Java version overwrite (and comment) in https://github.com/google/oss-fuzz/blob/master/projects/gson/build.sh~~\r\nDone, see https://github.com/google/oss-fuzz/pull/7086", "base": {"label": "google:master", "ref": "master", "sha": "615c8835d309e1be512dd98809b48332ce70250d"}, "resolved_issues": [{"number": 2018, "title": "Drop support for Java 6", "body": "Continuing to support Java 6 causes considerable headaches. Building with `-source 6 -target 6` is not supported in JDK versions after 11. I don't think we need to support further back than Java 7 even for the most ancient Android devices still in use."}], "fix_patch": "diff --git a/README.md b/README.md\nindex dccace4860..351fed1bf8 100644\n--- a/README.md\n+++ b/README.md\n@@ -34,6 +34,25 @@ Maven:\n \n ![Build Status](https://github.com/google/gson/actions/workflows/build.yml/badge.svg)\n \n+### Requirements\n+#### Java version\n+- Gson 2.9.0 and newer: Java 7\n+- Gson 2.8.9 and older: Java 6\n+\n+Despite supporting older Java versions, Gson also provides a JPMS module descriptor (module name `com.google.gson`) for users of Java 9 or newer.\n+\n+#### JPMS dependencies (Java 9+)\n+These are the optional Java Platform Module System (JPMS) JDK modules which Gson depends on.\n+This only applies when running Java 9 or newer.\n+\n+- `java.sql` (optional since Gson 2.8.9)  \n+When this module is present, Gson provides default adapters for some SQL date and time classes.\n+\n+- `jdk.unsupported`, respectively class `sun.misc.Unsafe` (optional)  \n+When this module is present, Gson can use the `Unsafe` class to create instances of classes without no-args constructor.\n+However, care should be taken when relying on this. `Unsafe` is not available in all environments and its usage has some pitfalls,\n+see [`GsonBuilder.disableJdkUnsafe()`](https://javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/GsonBuilder.html#disableJdkUnsafe()).\n+\n ### Documentation\n   * [API Javadoc](https://www.javadoc.io/doc/com.google.code.gson/gson): Documentation for the current release\n   * [User guide](https://github.com/google/gson/blob/master/UserGuide.md): This guide contains examples on how to use Gson in your code.\ndiff --git a/codegen/README.md b/codegen/README.md\nindex adee425a23..c9a9caf8d9 100644\n--- a/codegen/README.md\n+++ b/codegen/README.md\n@@ -1,4 +1,4 @@\n-# gson-codegen\n+# codegen\n \n This Maven module contains the source code for automatically generating Gson type adapters.\n \ndiff --git a/gson/bnd.bnd b/gson/bnd.bnd\nindex 07746f0a48..626a0c5bec 100644\n--- a/gson/bnd.bnd\n+++ b/gson/bnd.bnd\n@@ -3,8 +3,8 @@ Bundle-Name: ${project.name}\n Bundle-Description: ${project.description}\n Bundle-Vendor: Google Gson Project\n Bundle-ContactAddress: ${project.parent.url}\n-Bundle-RequiredExecutionEnvironment: JavaSE-1.6, JavaSE-1.7, JavaSE-1.8\n-Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.6))\"\n+Bundle-RequiredExecutionEnvironment: JavaSE-1.7, JavaSE-1.8\n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.7))\"\n \n # Optional dependency for JDK's sun.misc.Unsafe\n # https://bnd.bndtools.org/chapters/920-faq.html#remove-unwanted-imports-\ndiff --git a/gson/build.gradle b/gson/build.gradle\nindex 4dd24c1d0f..5a8919bcef 100644\n--- a/gson/build.gradle\n+++ b/gson/build.gradle\n@@ -4,8 +4,8 @@ apply plugin: 'maven'\n group = 'com.google.code.gson'\n version = '2.8.6-SNAPSHOT'\n \n-sourceCompatibility = 1.6\n-targetCompatibility = 1.6\n+sourceCompatibility = 1.7\n+targetCompatibility = 1.7\n \n sourceSets.main.java.exclude(\"**/module-info.java\")\n dependencies {\ndiff --git a/gson/pom.xml b/gson/pom.xml\nindex 31ea881f6b..1b1eb0d117 100644\n--- a/gson/pom.xml\n+++ b/gson/pom.xml\n@@ -58,8 +58,8 @@\n           <jdkToolchain>\n             <version>[1.5,9)</version>\n           </jdkToolchain>\n-          <source>1.6</source>\n-          <target>1.6</target>\n+          <source>1.7</source>\n+          <target>1.7</target>\n         </configuration>\n       </plugin>\n       <plugin>\n@@ -83,7 +83,7 @@\n         <configuration>\n           <excludePackageNames>com.google.gson.internal:com.google.gson.internal.bind</excludePackageNames>\n           <links>\n-            <link>https://docs.oracle.com/javase/6/docs/api/</link>\n+            <link>https://docs.oracle.com/javase/7/docs/api/</link>\n           </links>\n         </configuration>\n       </plugin>\ndiff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\nindex 617a644b1f..32a8456504 100644\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n@@ -574,8 +574,9 @@ public Type getGenericComponentType() {\n \n   /**\n    * The WildcardType interface supports multiple upper bounds and multiple\n-   * lower bounds. We only support what the Java 6 language needs - at most one\n-   * bound. If a lower bound is set, the upper bound must be Object.class.\n+   * lower bounds. We only support what the target Java version supports - at most one\n+   * bound, see also https://bugs.openjdk.java.net/browse/JDK-8250660. If a lower bound\n+   * is set, the upper bound must be Object.class.\n    */\n   private static final class WildcardTypeImpl implements WildcardType, Serializable {\n     private final Type upperBound;\ndiff --git a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java b/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\nindex 9da70ebccd..65b0a7719b 100644\n--- a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n+++ b/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n@@ -30,15 +30,10 @@ public MalformedJsonException(String msg) {\n   }\n \n   public MalformedJsonException(String msg, Throwable throwable) {\n-    super(msg);\n-    // Using initCause() instead of calling super() because Java 1.5 didn't retrofit IOException\n-    // with a constructor with Throwable. This was done in Java 1.6\n-    initCause(throwable);\n+    super(msg, throwable);\n   }\n \n   public MalformedJsonException(Throwable throwable) {\n-    // Using initCause() instead of calling super() because Java 1.5 didn't retrofit IOException\n-    // with a constructor with Throwable. This was done in Java 1.6\n-    initCause(throwable);\n+    super(throwable);\n   }\n }\ndiff --git a/gson/src/main/java/com/google/gson/stream/package-info.java b/gson/src/main/java/com/google/gson/stream/package-info.java\nnew file mode 100644\nindex 0000000000..bed6c62927\n--- /dev/null\n+++ b/gson/src/main/java/com/google/gson/stream/package-info.java\n@@ -0,0 +1,4 @@\n+/**\n+ * This package provides classes for processing JSON in an efficient streaming way.\n+ */\n+package com.google.gson.stream;\ndiff --git a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java b/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\nindex 68220cf631..fa8b08c3e0 100644\n--- a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n@@ -161,7 +161,7 @@ public void testJavaSerialization() throws IOException, ClassNotFoundException {\n   }\n \n   @SafeVarargs\n-  private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {\n+  private final <T> void assertIterationOrder(Iterable<T> actual, T... expected) {\n     ArrayList<T> actualList = new ArrayList<T>();\n     for (T t : actual) {\n       actualList.add(t);\ndiff --git a/pom.xml b/pom.xml\nindex 5e16a883b1..2c6dc9d617 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -28,7 +28,7 @@\n \n   <properties>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-    <java.version>1.6</java.version>\n+    <java.version>1.7</java.version>\n   </properties>\n \n   <scm>\n", "test_patch": "diff --git a/README.md b/README.md\nindex dccace4860..351fed1bf8 100644\n--- a/README.md\n+++ b/README.md\n@@ -34,6 +34,25 @@ Maven:\n \n ![Build Status](https://github.com/google/gson/actions/workflows/build.yml/badge.svg)\n \n+### Requirements\n+#### Java version\n+- Gson 2.9.0 and newer: Java 7\n+- Gson 2.8.9 and older: Java 6\n+\n+Despite supporting older Java versions, Gson also provides a JPMS module descriptor (module name `com.google.gson`) for users of Java 9 or newer.\n+\n+#### JPMS dependencies (Java 9+)\n+These are the optional Java Platform Module System (JPMS) JDK modules which Gson depends on.\n+This only applies when running Java 9 or newer.\n+\n+- `java.sql` (optional since Gson 2.8.9)  \n+When this module is present, Gson provides default adapters for some SQL date and time classes.\n+\n+- `jdk.unsupported`, respectively class `sun.misc.Unsafe` (optional)  \n+When this module is present, Gson can use the `Unsafe` class to create instances of classes without no-args constructor.\n+However, care should be taken when relying on this. `Unsafe` is not available in all environments and its usage has some pitfalls,\n+see [`GsonBuilder.disableJdkUnsafe()`](https://javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/GsonBuilder.html#disableJdkUnsafe()).\n+\n ### Documentation\n   * [API Javadoc](https://www.javadoc.io/doc/com.google.code.gson/gson): Documentation for the current release\n   * [User guide](https://github.com/google/gson/blob/master/UserGuide.md): This guide contains examples on how to use Gson in your code.\ndiff --git a/codegen/README.md b/codegen/README.md\nindex adee425a23..c9a9caf8d9 100644\n--- a/codegen/README.md\n+++ b/codegen/README.md\n@@ -1,4 +1,4 @@\n-# gson-codegen\n+# codegen\n \n This Maven module contains the source code for automatically generating Gson type adapters.\n \ndiff --git a/gson/bnd.bnd b/gson/bnd.bnd\nindex 07746f0a48..626a0c5bec 100644\n--- a/gson/bnd.bnd\n+++ b/gson/bnd.bnd\n@@ -3,8 +3,8 @@ Bundle-Name: ${project.name}\n Bundle-Description: ${project.description}\n Bundle-Vendor: Google Gson Project\n Bundle-ContactAddress: ${project.parent.url}\n-Bundle-RequiredExecutionEnvironment: JavaSE-1.6, JavaSE-1.7, JavaSE-1.8\n-Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.6))\"\n+Bundle-RequiredExecutionEnvironment: JavaSE-1.7, JavaSE-1.8\n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.7))\"\n \n # Optional dependency for JDK's sun.misc.Unsafe\n # https://bnd.bndtools.org/chapters/920-faq.html#remove-unwanted-imports-\ndiff --git a/gson/build.gradle b/gson/build.gradle\nindex 4dd24c1d0f..5a8919bcef 100644\n--- a/gson/build.gradle\n+++ b/gson/build.gradle\n@@ -4,8 +4,8 @@ apply plugin: 'maven'\n group = 'com.google.code.gson'\n version = '2.8.6-SNAPSHOT'\n \n-sourceCompatibility = 1.6\n-targetCompatibility = 1.6\n+sourceCompatibility = 1.7\n+targetCompatibility = 1.7\n \n sourceSets.main.java.exclude(\"**/module-info.java\")\n dependencies {\ndiff --git a/gson/pom.xml b/gson/pom.xml\nindex 31ea881f6b..1b1eb0d117 100644\n--- a/gson/pom.xml\n+++ b/gson/pom.xml\n@@ -58,8 +58,8 @@\n           <jdkToolchain>\n             <version>[1.5,9)</version>\n           </jdkToolchain>\n-          <source>1.6</source>\n-          <target>1.6</target>\n+          <source>1.7</source>\n+          <target>1.7</target>\n         </configuration>\n       </plugin>\n       <plugin>\n@@ -83,7 +83,7 @@\n         <configuration>\n           <excludePackageNames>com.google.gson.internal:com.google.gson.internal.bind</excludePackageNames>\n           <links>\n-            <link>https://docs.oracle.com/javase/6/docs/api/</link>\n+            <link>https://docs.oracle.com/javase/7/docs/api/</link>\n           </links>\n         </configuration>\n       </plugin>\ndiff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\nindex 617a644b1f..32a8456504 100644\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n@@ -574,8 +574,9 @@ public Type getGenericComponentType() {\n \n   /**\n    * The WildcardType interface supports multiple upper bounds and multiple\n-   * lower bounds. We only support what the Java 6 language needs - at most one\n-   * bound. If a lower bound is set, the upper bound must be Object.class.\n+   * lower bounds. We only support what the target Java version supports - at most one\n+   * bound, see also https://bugs.openjdk.java.net/browse/JDK-8250660. If a lower bound\n+   * is set, the upper bound must be Object.class.\n    */\n   private static final class WildcardTypeImpl implements WildcardType, Serializable {\n     private final Type upperBound;\ndiff --git a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java b/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\nindex 9da70ebccd..65b0a7719b 100644\n--- a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n+++ b/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java\n@@ -30,15 +30,10 @@ public MalformedJsonException(String msg) {\n   }\n \n   public MalformedJsonException(String msg, Throwable throwable) {\n-    super(msg);\n-    // Using initCause() instead of calling super() because Java 1.5 didn't retrofit IOException\n-    // with a constructor with Throwable. This was done in Java 1.6\n-    initCause(throwable);\n+    super(msg, throwable);\n   }\n \n   public MalformedJsonException(Throwable throwable) {\n-    // Using initCause() instead of calling super() because Java 1.5 didn't retrofit IOException\n-    // with a constructor with Throwable. This was done in Java 1.6\n-    initCause(throwable);\n+    super(throwable);\n   }\n }\ndiff --git a/gson/src/main/java/com/google/gson/stream/package-info.java b/gson/src/main/java/com/google/gson/stream/package-info.java\nnew file mode 100644\nindex 0000000000..bed6c62927\n--- /dev/null\n+++ b/gson/src/main/java/com/google/gson/stream/package-info.java\n@@ -0,0 +1,4 @@\n+/**\n+ * This package provides classes for processing JSON in an efficient streaming way.\n+ */\n+package com.google.gson.stream;\ndiff --git a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java b/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\nindex 68220cf631..fa8b08c3e0 100644\n--- a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n+++ b/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java\n@@ -161,7 +161,7 @@ public void testJavaSerialization() throws IOException, ClassNotFoundException {\n   }\n \n   @SafeVarargs\n-  private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {\n+  private final <T> void assertIterationOrder(Iterable<T> actual, T... expected) {\n     ArrayList<T> actualList = new ArrayList<T>();\n     for (T t : actual) {\n       actualList.add(t);\ndiff --git a/pom.xml b/pom.xml\nindex 5e16a883b1..2c6dc9d617 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -28,7 +28,7 @@\n \n   <properties>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-    <java.version>1.6</java.version>\n+    <java.version>1.7</java.version>\n   </properties>\n \n   <scm>\n", "instance_id": "google__gson-2043"}