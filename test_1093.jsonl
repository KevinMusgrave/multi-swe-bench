{"org": "google", "repo": "gson", "number": 1093, "title": "value(double) can write NaN and infinite values when lenient, as value(Number) does", "body": "Fixes #1090.", "state": "closed", "base": {"label": "google:master", "ref": "master", "sha": "0aaef0fd1bb1b9729543dc40168adfb829eb75a4"}, "resolved_issues": [{"number": 1090, "title": "JsonWriter#value(java.lang.Number) can be lenient, but JsonWriter#value(double) can't,", "body": "In lenient mode, JsonWriter#value(java.lang.Number) can write pseudo-numeric values like `NaN`, `Infinity`, `-Infinity`:\r\n```java\r\n    if (!lenient\r\n        && (string.equals(\"-Infinity\") || string.equals(\"Infinity\") || string.equals(\"NaN\"))) {\r\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\r\n    }\r\n```\r\n\r\nBut JsonWriter#value(double) behaves in different way: \r\n```java\r\n    if (Double.isNaN(value) || Double.isInfinite(value)) {\r\n      throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\r\n    }\r\n```\r\n\r\nSo, while working with streaming, it's impossible to write semi-numeric value without boxing a double (e. g. `out.value((Number) Double.valueOf(Double.NaN))`).\r\n\r\nI think, this should be possible, because boxing gives worse performance.", "state": "closed", "created_at": "2017-05-30T13:39:49Z", "closed_at": "2017-05-31T16:50:45Z", "labels": []}], "fix_patch": "diff --git a/gson/src/main/java/com/google/gson/stream/JsonWriter.java b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\nindex e2fc19611d..8148816c2f 100644\n--- a/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonWriter.java\n@@ -491,10 +491,10 @@ public JsonWriter value(Boolean value) throws IOException {\n    * @return this writer.\n    */\n   public JsonWriter value(double value) throws IOException {\n-    if (Double.isNaN(value) || Double.isInfinite(value)) {\n+    writeDeferredName();\n+    if (!lenient && (Double.isNaN(value) || Double.isInfinite(value))) {\n       throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n     }\n-    writeDeferredName();\n     beforeValue();\n     out.append(Double.toString(value));\n     return this;\n", "test_patch": "diff --git a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java b/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\nindex 34dc914022..2bcec173ca 100644\n--- a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java\n@@ -16,11 +16,12 @@\n \n package com.google.gson.stream;\n \n+import junit.framework.TestCase;\n+\n import java.io.IOException;\n import java.io.StringWriter;\n import java.math.BigDecimal;\n import java.math.BigInteger;\n-import junit.framework.TestCase;\n \n @SuppressWarnings(\"resource\")\n public final class JsonWriterTest extends TestCase {\n@@ -213,6 +214,30 @@ public void testNonFiniteBoxedDoubles() throws IOException {\n     }\n   }\n \n+  public void testNonFiniteDoublesWhenLenient() throws IOException {\n+    StringWriter stringWriter = new StringWriter();\n+    JsonWriter jsonWriter = new JsonWriter(stringWriter);\n+    jsonWriter.setLenient(true);\n+    jsonWriter.beginArray();\n+    jsonWriter.value(Double.NaN);\n+    jsonWriter.value(Double.NEGATIVE_INFINITY);\n+    jsonWriter.value(Double.POSITIVE_INFINITY);\n+    jsonWriter.endArray();\n+    assertEquals(\"[NaN,-Infinity,Infinity]\", stringWriter.toString());\n+  }\n+\n+  public void testNonFiniteBoxedDoublesWhenLenient() throws IOException {\n+    StringWriter stringWriter = new StringWriter();\n+    JsonWriter jsonWriter = new JsonWriter(stringWriter);\n+    jsonWriter.setLenient(true);\n+    jsonWriter.beginArray();\n+    jsonWriter.value(Double.valueOf(Double.NaN));\n+    jsonWriter.value(Double.valueOf(Double.NEGATIVE_INFINITY));\n+    jsonWriter.value(Double.valueOf(Double.POSITIVE_INFINITY));\n+    jsonWriter.endArray();\n+    assertEquals(\"[NaN,-Infinity,Infinity]\", stringWriter.toString());\n+  }\n+\n   public void testDoubles() throws IOException {\n     StringWriter stringWriter = new StringWriter();\n     JsonWriter jsonWriter = new JsonWriter(stringWriter);\n", "instance_id": "google__gson-1093", "fixed_tests": {}, "failed_tests": [], "skipped_tests": [], "run_result": {"passed_count": 89, "failed_count": 3, "skipped_count": 0, "passed_tests": ["com.google.gson.functional.EnumTest", "com.google.gson.ObjectTypeAdapterTest", "com.google.gson.GsonBuilderTest", "com.google.gson.internal.LazilyParsedNumberTest", "com.google.gson.functional.InheritanceTest", "com.google.gson.functional.MapTest", "com.google.gson.functional.InterfaceTest", "com.google.gson.OverrideCoreTypeAdaptersTest", "com.google.gson.functional.PrettyPrintingTest", "com.google.gson.functional.ExposeFieldsTest", "com.google.gson.GsonTypeAdapterTest", "com.google.gson.functional.RawSerializationTest", "com.google.gson.internal.bind.JsonElementReaderTest", "com.google.gson.functional.MapAsArrayTypeAdapterTest", "com.google.gson.functional.TypeHierarchyAdapterTest", "com.google.gson.functional.ReadersWritersTest", "com.google.gson.functional.TreeTypeAdaptersTest", "com.google.gson.ExposeAnnotationExclusionStrategyTest", "com.google.gson.functional.StringTest", "com.google.gson.JavaSerializationTest", "com.google.gson.functional.NullObjectAndFieldTest", "com.google.gson.functional.FieldNamingTest", "com.google.gson.ParameterizedTypeTest", "com.google.gson.functional.JsonAdapterSerializerDeserializerTest", "com.google.gson.GsonTest", "com.google.gson.functional.TypeVariableTest", "com.google.gson.FieldAttributesTest", "com.google.gson.functional.ExclusionStrategyFunctionalTest", "com.google.gson.functional.VersioningTest", "com.google.gson.functional.CustomSerializerTest", "com.google.gson.JsonObjectTest", "com.google.gson.functional.CollectionTest", "com.google.gson.functional.LeniencyTest", "com.google.gson.functional.PrintFormattingTest", "com.google.gson.DefaultMapJsonSerializerTest", "com.google.gson.functional.EscapingTest", "com.google.gson.functional.JavaUtilConcurrentAtomicTest", "com.google.gson.functional.TypeAdapterPrecedenceTest", "com.google.gson.functional.FieldExclusionTest", "com.google.gson.internal.bind.JsonTreeWriterTest", "com.google.gson.VersionExclusionStrategyTest", "com.google.gson.JsonStreamParserTest", "com.google.gson.functional.PrimitiveCharacterTest", "com.google.gson.functional.MoreSpecificTypeSerializationTest", "com.google.gson.internal.GsonTypesTest", "com.google.gson.metrics.PerformanceTest", "com.google.gson.internal.UnsafeAllocatorInstantiationTest", "com.google.gson.functional.CustomDeserializerTest", "com.google.gson.reflect.TypeTokenTest", "com.google.gson.stream.JsonWriterTest", "com.google.gson.functional.JsonParserTest", "com.google.gson.functional.ParameterizedTypesTest", "com.google.gson.regression.JsonAdapterNullSafeTest", "com.google.gson.functional.ConcurrencyTest", "com.google.gson.functional.JsonTreeTest", "com.google.gson.functional.ThrowableFunctionalTest", "com.google.gson.GenericArrayTypeTest", "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest", "com.google.gson.functional.InstanceCreatorTest", "com.google.gson.functional.StreamingTypeAdaptersTest", "com.google.gson.functional.CustomTypeAdaptersTest", "com.google.gson.CommentsTest", "com.google.gson.functional.JavaUtilTest", "com.google.gson.stream.JsonReaderTest", "com.google.gson.internal.bind.JsonTreeReaderTest", "com.google.gson.InnerClassExclusionStrategyTest", "com.google.gson.functional.JsonArrayTest", "com.google.gson.functional.SecurityTest", "com.google.gson.functional.SerializedNameTest", "com.google.gson.DefaultInetAddressTypeAdapterTest", "com.google.gson.JsonArrayTest", "com.google.gson.internal.LinkedTreeMapTest", "com.google.gson.functional.ArrayTest", "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest", "com.google.gson.internal.LinkedHashTreeMapTest", "com.google.gson.functional.PrimitiveTest", "com.google.gson.LongSerializationPolicyTest", "com.google.gson.stream.JsonReaderPathTest", "com.google.gson.functional.UncategorizedTest", "com.google.gson.internal.bind.RecursiveTypesResolveTest", "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest", "com.google.gson.MixedStreamTest", "com.google.gson.functional.CircularReferenceTest", "com.google.gson.JsonParserTest", "com.google.gson.functional.NamingPolicyTest", "com.google.gson.functional.InternationalizationTest", "com.google.gson.JsonNullTest", "com.google.gson.functional.DelegateTypeAdapterTest", "com.google.gson.JsonPrimitiveTest"], "failed_tests": ["com.google.gson.functional.DefaultTypeAdaptersTest", "com.google.gson.DefaultDateTypeAdapterTest", "com.google.gson.functional.ObjectTest"], "skipped_tests": []}, "test_patch_result": {"passed_count": 88, "failed_count": 4, "skipped_count": 0, "passed_tests": ["com.google.gson.functional.EnumTest", "com.google.gson.ObjectTypeAdapterTest", "com.google.gson.GsonBuilderTest", "com.google.gson.internal.LazilyParsedNumberTest", "com.google.gson.functional.InheritanceTest", "com.google.gson.functional.MapTest", "com.google.gson.functional.InterfaceTest", "com.google.gson.OverrideCoreTypeAdaptersTest", "com.google.gson.functional.PrettyPrintingTest", "com.google.gson.functional.ExposeFieldsTest", "com.google.gson.GsonTypeAdapterTest", "com.google.gson.functional.RawSerializationTest", "com.google.gson.internal.bind.JsonElementReaderTest", "com.google.gson.functional.MapAsArrayTypeAdapterTest", "com.google.gson.functional.TypeHierarchyAdapterTest", "com.google.gson.functional.ReadersWritersTest", "com.google.gson.functional.TreeTypeAdaptersTest", "com.google.gson.ExposeAnnotationExclusionStrategyTest", "com.google.gson.functional.StringTest", "com.google.gson.JavaSerializationTest", "com.google.gson.functional.NullObjectAndFieldTest", "com.google.gson.functional.FieldNamingTest", "com.google.gson.ParameterizedTypeTest", "com.google.gson.functional.JsonAdapterSerializerDeserializerTest", "com.google.gson.GsonTest", "com.google.gson.functional.TypeVariableTest", "com.google.gson.FieldAttributesTest", "com.google.gson.functional.ExclusionStrategyFunctionalTest", "com.google.gson.functional.VersioningTest", "com.google.gson.functional.CustomSerializerTest", "com.google.gson.JsonObjectTest", "com.google.gson.functional.CollectionTest", "com.google.gson.functional.LeniencyTest", "com.google.gson.functional.PrintFormattingTest", "com.google.gson.DefaultMapJsonSerializerTest", "com.google.gson.functional.EscapingTest", "com.google.gson.functional.JavaUtilConcurrentAtomicTest", "com.google.gson.functional.TypeAdapterPrecedenceTest", "com.google.gson.functional.FieldExclusionTest", "com.google.gson.internal.bind.JsonTreeWriterTest", "com.google.gson.VersionExclusionStrategyTest", "com.google.gson.JsonStreamParserTest", "com.google.gson.functional.PrimitiveCharacterTest", "com.google.gson.functional.MoreSpecificTypeSerializationTest", "com.google.gson.internal.GsonTypesTest", "com.google.gson.metrics.PerformanceTest", "com.google.gson.internal.UnsafeAllocatorInstantiationTest", "com.google.gson.functional.CustomDeserializerTest", "com.google.gson.reflect.TypeTokenTest", "com.google.gson.functional.JsonParserTest", "com.google.gson.functional.ParameterizedTypesTest", "com.google.gson.regression.JsonAdapterNullSafeTest", "com.google.gson.functional.ConcurrencyTest", "com.google.gson.functional.JsonTreeTest", "com.google.gson.functional.ThrowableFunctionalTest", "com.google.gson.GenericArrayTypeTest", "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest", "com.google.gson.functional.InstanceCreatorTest", "com.google.gson.functional.StreamingTypeAdaptersTest", "com.google.gson.functional.CustomTypeAdaptersTest", "com.google.gson.CommentsTest", "com.google.gson.functional.JavaUtilTest", "com.google.gson.stream.JsonReaderTest", "com.google.gson.internal.bind.JsonTreeReaderTest", "com.google.gson.InnerClassExclusionStrategyTest", "com.google.gson.functional.JsonArrayTest", "com.google.gson.functional.SecurityTest", "com.google.gson.functional.SerializedNameTest", "com.google.gson.DefaultInetAddressTypeAdapterTest", "com.google.gson.JsonArrayTest", "com.google.gson.internal.LinkedTreeMapTest", "com.google.gson.functional.ArrayTest", "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest", "com.google.gson.internal.LinkedHashTreeMapTest", "com.google.gson.functional.PrimitiveTest", "com.google.gson.LongSerializationPolicyTest", "com.google.gson.stream.JsonReaderPathTest", "com.google.gson.functional.UncategorizedTest", "com.google.gson.internal.bind.RecursiveTypesResolveTest", "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest", "com.google.gson.MixedStreamTest", "com.google.gson.functional.CircularReferenceTest", "com.google.gson.JsonParserTest", "com.google.gson.functional.NamingPolicyTest", "com.google.gson.functional.InternationalizationTest", "com.google.gson.JsonNullTest", "com.google.gson.functional.DelegateTypeAdapterTest", "com.google.gson.JsonPrimitiveTest"], "failed_tests": ["com.google.gson.functional.DefaultTypeAdaptersTest", "com.google.gson.DefaultDateTypeAdapterTest", "com.google.gson.functional.ObjectTest", "com.google.gson.stream.JsonWriterTest"], "skipped_tests": []}, "fix_patch_result": {"passed_count": 89, "failed_count": 3, "skipped_count": 0, "passed_tests": ["com.google.gson.functional.EnumTest", "com.google.gson.ObjectTypeAdapterTest", "com.google.gson.GsonBuilderTest", "com.google.gson.internal.LazilyParsedNumberTest", "com.google.gson.functional.InheritanceTest", "com.google.gson.functional.MapTest", "com.google.gson.functional.InterfaceTest", "com.google.gson.OverrideCoreTypeAdaptersTest", "com.google.gson.functional.PrettyPrintingTest", "com.google.gson.functional.ExposeFieldsTest", "com.google.gson.GsonTypeAdapterTest", "com.google.gson.functional.RawSerializationTest", "com.google.gson.internal.bind.JsonElementReaderTest", "com.google.gson.functional.MapAsArrayTypeAdapterTest", "com.google.gson.functional.TypeHierarchyAdapterTest", "com.google.gson.functional.ReadersWritersTest", "com.google.gson.functional.TreeTypeAdaptersTest", "com.google.gson.ExposeAnnotationExclusionStrategyTest", "com.google.gson.functional.StringTest", "com.google.gson.JavaSerializationTest", "com.google.gson.functional.NullObjectAndFieldTest", "com.google.gson.functional.FieldNamingTest", "com.google.gson.ParameterizedTypeTest", "com.google.gson.functional.JsonAdapterSerializerDeserializerTest", "com.google.gson.GsonTest", "com.google.gson.functional.TypeVariableTest", "com.google.gson.FieldAttributesTest", "com.google.gson.functional.ExclusionStrategyFunctionalTest", "com.google.gson.functional.VersioningTest", "com.google.gson.functional.CustomSerializerTest", "com.google.gson.JsonObjectTest", "com.google.gson.functional.CollectionTest", "com.google.gson.functional.LeniencyTest", "com.google.gson.functional.PrintFormattingTest", "com.google.gson.DefaultMapJsonSerializerTest", "com.google.gson.functional.EscapingTest", "com.google.gson.functional.JavaUtilConcurrentAtomicTest", "com.google.gson.functional.TypeAdapterPrecedenceTest", "com.google.gson.functional.FieldExclusionTest", "com.google.gson.internal.bind.JsonTreeWriterTest", "com.google.gson.VersionExclusionStrategyTest", "com.google.gson.JsonStreamParserTest", "com.google.gson.functional.PrimitiveCharacterTest", "com.google.gson.functional.MoreSpecificTypeSerializationTest", "com.google.gson.internal.GsonTypesTest", "com.google.gson.metrics.PerformanceTest", "com.google.gson.internal.UnsafeAllocatorInstantiationTest", "com.google.gson.functional.CustomDeserializerTest", "com.google.gson.reflect.TypeTokenTest", "com.google.gson.stream.JsonWriterTest", "com.google.gson.functional.JsonParserTest", "com.google.gson.functional.ParameterizedTypesTest", "com.google.gson.regression.JsonAdapterNullSafeTest", "com.google.gson.functional.ConcurrencyTest", "com.google.gson.functional.JsonTreeTest", "com.google.gson.functional.ThrowableFunctionalTest", "com.google.gson.GenericArrayTypeTest", "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest", "com.google.gson.functional.InstanceCreatorTest", "com.google.gson.functional.StreamingTypeAdaptersTest", "com.google.gson.functional.CustomTypeAdaptersTest", "com.google.gson.CommentsTest", "com.google.gson.functional.JavaUtilTest", "com.google.gson.stream.JsonReaderTest", "com.google.gson.internal.bind.JsonTreeReaderTest", "com.google.gson.InnerClassExclusionStrategyTest", "com.google.gson.functional.JsonArrayTest", "com.google.gson.functional.SecurityTest", "com.google.gson.functional.SerializedNameTest", "com.google.gson.DefaultInetAddressTypeAdapterTest", "com.google.gson.JsonArrayTest", "com.google.gson.internal.LinkedTreeMapTest", "com.google.gson.functional.ArrayTest", "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest", "com.google.gson.internal.LinkedHashTreeMapTest", "com.google.gson.functional.PrimitiveTest", "com.google.gson.LongSerializationPolicyTest", "com.google.gson.stream.JsonReaderPathTest", "com.google.gson.functional.UncategorizedTest", "com.google.gson.internal.bind.RecursiveTypesResolveTest", "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest", "com.google.gson.MixedStreamTest", "com.google.gson.functional.CircularReferenceTest", "com.google.gson.JsonParserTest", "com.google.gson.functional.NamingPolicyTest", "com.google.gson.functional.InternationalizationTest", "com.google.gson.JsonNullTest", "com.google.gson.functional.DelegateTypeAdapterTest", "com.google.gson.JsonPrimitiveTest"], "failed_tests": ["com.google.gson.functional.DefaultTypeAdaptersTest", "com.google.gson.DefaultDateTypeAdapterTest", "com.google.gson.functional.ObjectTest"], "skipped_tests": []}, "f2p_tests": {}, "p2p_tests": {"com.google.gson.functional.EnumTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.ObjectTypeAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.GsonBuilderTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.LazilyParsedNumberTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.InheritanceTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.MapTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.InterfaceTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.OverrideCoreTypeAdaptersTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.PrettyPrintingTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ExposeFieldsTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.GsonTypeAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.RawSerializationTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.bind.JsonElementReaderTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.MapAsArrayTypeAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.TypeHierarchyAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ReadersWritersTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.TreeTypeAdaptersTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.ExposeAnnotationExclusionStrategyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.StringTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JavaSerializationTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.NullObjectAndFieldTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.FieldNamingTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.ParameterizedTypeTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JsonAdapterSerializerDeserializerTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.GsonTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.TypeVariableTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.FieldAttributesTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ExclusionStrategyFunctionalTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.VersioningTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.CustomSerializerTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonObjectTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.CollectionTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.LeniencyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.PrintFormattingTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.DefaultMapJsonSerializerTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.EscapingTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JavaUtilConcurrentAtomicTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.TypeAdapterPrecedenceTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.FieldExclusionTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.bind.JsonTreeWriterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.VersionExclusionStrategyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonStreamParserTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.PrimitiveCharacterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.MoreSpecificTypeSerializationTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.GsonTypesTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.metrics.PerformanceTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.UnsafeAllocatorInstantiationTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.CustomDeserializerTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.reflect.TypeTokenTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.stream.JsonWriterTest": {"run": "PASS", "test": "FAIL", "fix": "PASS"}, "com.google.gson.functional.JsonParserTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ParameterizedTypesTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.regression.JsonAdapterNullSafeTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ConcurrencyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JsonTreeTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ThrowableFunctionalTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.GenericArrayTypeTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.InstanceCreatorTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.StreamingTypeAdaptersTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.CustomTypeAdaptersTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.CommentsTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JavaUtilTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.stream.JsonReaderTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.bind.JsonTreeReaderTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.InnerClassExclusionStrategyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JsonArrayTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.SecurityTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.SerializedNameTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.DefaultInetAddressTypeAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonArrayTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.LinkedTreeMapTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.ArrayTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JsonAdapterAnnotationOnClassesTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.LinkedHashTreeMapTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.PrimitiveTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.LongSerializationPolicyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.stream.JsonReaderPathTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.UncategorizedTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.internal.bind.RecursiveTypesResolveTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.MixedStreamTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.CircularReferenceTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonParserTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.NamingPolicyTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.InternationalizationTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonNullTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.functional.DelegateTypeAdapterTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "com.google.gson.JsonPrimitiveTest": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {}}
